//#include<bits/stdc++.h>
#include<cstdio>
#include<cstdlib>
#include<iostream>
#include<algorithm>
#include<vector>
#include<stack>
#include<queue>
#include<set>
#include<string>
#include<cmath>
#include<cassert>
#include<cstdint>
#include<map>
using namespace std;

typedef int64_t i64;typedef int32_t i32;
typedef i64 int__;
#define rep(i,j) for(int__ i=0;i<j;i++)
#define repeat(i,j,k) for(int__ i=(j);i<(k);i++)
#define all(v) begin(v),end(v)

const i32 INF=1<<30;//10E10

int coefficients[26]={};
bool is_top[26]={},is_used[26]={};

//順列生成
int rec(int n,vector<bool> used,int sum){
  if(n==26)return sum==0 ? 1:0;
  int ans=0;
  if(!is_used[n])return rec(n+1,used,sum);
  rep(i,10){
    if(used[i])continue;
    if(is_top[n] and i==0)continue;
    used[i]=true;
    ans+=rec(n+1,used,sum+i*coefficients[n]);
    used[i]=false;
  }
  return ans;
}

int main(){

  while(true){
    int n;cin>>n;
    if(n==0)break;
    rep(i,26){
      coefficients[i]=0;
      is_top[i]=0;
      is_used[i]=0;
    }

    rep(i,n){
      string s;
      cin>>s;
      rep(j,s.size()){
        if(j==0 and s.size()>1)is_top[s[j]-'A']=true;
        coefficients[s[j]-'A']+= pow(10,s.size()-j-1)*(i==n-1 ? -1:1);
        is_used[s[j]-'A']=true;
      }
    }

    int ans=rec(0,vector<bool>(10,false),0);

    cout<<ans<<endl;
    
  }

  
}
